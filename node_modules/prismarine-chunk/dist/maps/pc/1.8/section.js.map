{"version":3,"sources":["/src/pc/1.8/section.js"],"names":["require","readUInt4LE","writeUInt4LE","w","l","sh","SECTION_SIZE","getArrayPosition","pos","x","z","y","getBlockCursor","getBlockLightCursor","getSkyLightCursor","Section","data","Buffer","fill","iniFunc","skylight","light","n","block","writeUInt16LE","type","metadata","skyLight","r","g","b","cursor","readUInt16LE","id","getBlockData","getBlockType","isBuffer","Error","length","module","exports"],"mappings":"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","file":"../../../pc/1.8/section.js","sourcesContent":["var { readUInt4LE, writeUInt4LE } = require('uint4');\n\nconst w=16;\nconst l=16;\nconst sh=16;//section height\n\nconst SECTION_SIZE=(w * l * sh * 3);\n\n\nvar getArrayPosition = function (pos) {\n  return pos.x+w*(pos.z+l*pos.y);\n};\n\nvar getBlockCursor = function (pos) {\n  return getArrayPosition(pos) * 2.0;\n};\n\nvar getBlockLightCursor = function(pos) {\n  return getArrayPosition(pos) * 0.5 + w * l * sh*2;\n};\n\nvar getSkyLightCursor = function(pos) {\n  return getArrayPosition(pos) * 0.5 + w * l * sh/2*5;\n};\n\n\nclass Section {\n\n  constructor() {\n    this.data=new Buffer(SECTION_SIZE);\n    this.data.fill(0);\n  }\n\n  initialize(iniFunc) {\n    const skylight=w * l * sh/2*5;\n    const light=w * l * sh*2;\n    let n=0;\n    for(let y=0;y<sh;y++) {\n      for(let z=0;z<w;z++) {\n        for(let x=0;x<l;x++,n++) {\n          const block=iniFunc(x,y,z,n);\n          if(block==null)\n            continue;\n          this.data.writeUInt16LE(block.type<<4 | block.metadata,n*2);\n          writeUInt4LE(this.data, block.light, n*0.5+light);\n          writeUInt4LE(this.data, block.skyLight, n*0.5+skylight);\n        }\n      }\n    }\n  }\n\n  getBiomeColor(pos) {\n    return {\n      r: 0,\n      g: 0,\n      b: 0\n    }\n  }\n\n  setBiomeColor(pos, r, g, b) {\n\n  }\n\n  getBlockType(pos) {\n    var cursor = getBlockCursor(pos);\n    return this.data.readUInt16LE(cursor) >> 4;\n  }\n\n  getBlockData(pos) {\n    var cursor = getBlockCursor(pos);\n    return this.data.readUInt16LE(cursor) & 15;\n  }\n\n  getBlockLight(pos) {\n    var cursor = getBlockLightCursor(pos);\n    return readUInt4LE(this.data, cursor);\n  }\n\n  getSkyLight(pos) {\n    var cursor = getSkyLightCursor(pos);\n    return readUInt4LE(this.data, cursor);\n  }\n\n  setBlockType(pos, id) {\n    var cursor = getBlockCursor(pos);\n    var data = this.getBlockData(pos);\n    this.data.writeUInt16LE((id << 4) | data, cursor);\n  }\n\n  setBlockData(pos, data) {\n    var cursor = getBlockCursor(pos);\n    var id = this.getBlockType(pos);\n    this.data.writeUInt16LE((id << 4) | data, cursor);\n  }\n\n  setBlockLight(pos, light) {\n    var cursor = getBlockLightCursor(pos);\n    writeUInt4LE(this.data, light, cursor);\n  }\n\n  setSkyLight(pos, light) {\n    var cursor = getSkyLightCursor(pos);\n    writeUInt4LE(this.data, light, cursor);\n  }\n\n  dump() {\n    return this.data;\n  }\n\n\n  load(data) {\n    if (!Buffer.isBuffer(data))\n      throw(new Error('Data must be a buffer'));\n    if (data.length != SECTION_SIZE)\n      throw(new Error(`Data buffer not correct size \\(was ${data.length}, expected ${SECTION_SIZE}\\)`));\n    this.data = data;\n  }\n}\n\n\nSection.w=w;\nSection.l=l;\nSection.sh=sh;\nSection.SECTION_SIZE=SECTION_SIZE;\n\nmodule.exports=Section;\n"]}