{"version":3,"sources":["/src/pe/1.0/chunk.js"],"names":["SubChunk","require","Vec3","BIOME_ID_SIZE","HEIGHT_SIZE","BUFFER_SIZE","module","exports","loader","mcVersion","Block","Chunk","w","l","h","getOffset","pos","x","z","y","exists","val","undefined","chunks","Array","i","length","data","Buffer","fill","block","getBlockType","getBiome","getBlockData","light","getBlockLight","skyLight","getSkyLight","type","setBlockType","metadata","setBlockData","biome","setBiome","id","setSkyLight","setBlockLight","chunk","r","g","b","readUInt8","writeUInt8","height","newData","isBuffer","Error","offset","numberOfChunks","load","slice","size","exportData","dump","copy"],"mappings":"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","file":"../../../pe/1.0/chunk.js","sourcesContent":["'use strict';\n\nconst SubChunk = require('./subchunk');\nconst Vec3 = require('vec3');\n\nconst BIOME_ID_SIZE = 256;\nconst HEIGHT_SIZE = 256 * 2;\n\nconst BUFFER_SIZE = BIOME_ID_SIZE + HEIGHT_SIZE;\n\nmodule.exports = loader;\n\nfunction loader(mcVersion) {\n  Block = require('prismarine-block')(mcVersion);\n  Chunk.w = 16;\n  Chunk.l = 16;\n  Chunk.h = 256;\n  Chunk.BUFFER_SIZE = 3 + 256 + 512 + (16 * 10241);\n  return Chunk;\n}\n\nvar Block;\n\nfunction getOffset(pos) {\n\treturn (pos.x * 16 + pos.z) * 256 + pos.y;\n}\n\nfunction exists(val) {\n  return val !== undefined;\n}\n\nclass Chunk {\n  constructor() {\n    this.chunks = new Array(16);\n    for (var i = 0; i < this.chunks.length; i++) {\n      this.chunks[i] = new SubChunk();\n    }\n\n    this.data = new Buffer(BUFFER_SIZE);\n    this.data.fill(0);\n\n    // init biome id\n    for (var i = 0; i < 256; i++) {\n      this.data[i] = 1;\n    }\n  }\n\n  getBlock(pos)  {\n    var block = new Block(this.getBlockType(pos), this.getBiome(pos), this.getBlockData(pos));\n    block.light = this.getBlockLight(pos);\n    block.skyLight = this.getSkyLight(pos);\n    return block;\n  }\n\n  setBlock(pos, block) {\n    if (exists(block.type))\n      this.setBlockType(pos, block.type);\n    if (exists(block.metadata))\n      this.setBlockData(pos, block.metadata);\n    if (exists(block.biome))\n      this.setBiome(pos, block.biome.id);\n    if (exists(block.skyLight))\n      this.setSkyLight(pos, block.skyLight);\n    if (exists(block.light))\n      this.setBlockLight(pos, block.light);\n  }\n\n  getBlockType(pos) {\n    var chunk = this.chunks[pos.y >> 4]\n    return chunk.getBlockType(new Vec3(pos.x, pos.y - 16 * (pos.y >> 4), pos.z));\n  }\n\n  setBlockType(pos, type) {\n    var chunk = this.chunks[pos.y >> 4];\n    chunk.setBlockType(new Vec3(pos.x, pos.y - 16 * (pos.y >> 4), pos.z), type);\n  }\n\n  getBlockData(pos) {\n    var chunk = this.chunks[pos.y >> 4]\n    return chunk.getBlockData(new Vec3(pos.x, pos.y - 16 * (pos.y >> 4), pos.z));\n  }\n\n  setBlockData(pos, data) {\n    var chunk = this.chunks[pos.y >> 4];\n    chunk.setBlockData(new Vec3(pos.x, pos.y - 16 * (pos.y >> 4), pos.z), data);\n  }\n\n  getBlockLight(pos) {\n    var chunk = this.chunks[pos.y >> 4]\n    return chunk.getBlockLight(new Vec3(pos.x, pos.y - 16 * (pos.y >> 4), pos.z));\n  }\n\n  setBlockLight(pos, light) {\n    var chunk = this.chunks[pos.y >> 4];\n    chunk.setBlockLight(new Vec3(pos.x, pos.y - 16 * (pos.y >> 4), pos.z), light);\n  }\n\n  getSkyLight(pos) {\n    var chunk = this.chunks[pos.y >> 4]\n    return chunk.getSkyLight(new Vec3(pos.x, pos.y - 16 * (pos.y >> 4), pos.z));\n  }\n\n  setSkyLight(pos, light) {\n    var chunk = this.chunks[pos.y >> 4];\n    chunk.setSkyLight(new Vec3(pos.x, pos.y - 16 * (pos.y >> 4), pos.z), light);\n  }\n\n  getBiomeColor(pos) {\n    return { x: 0, y: 0, z: 0 }\n  }\n\n  setBiomeColor(pos, r, g, b) {\n    // no longer a feature ;(\n  }\n\n  getBiome(pos) {\n    return this.data.readUInt8((pos.z << 4) + (pos.x));\n  }\n\n  setBiome(pos, id) {\n    this.data.writeUInt8(id, (pos.z << 4) + (pos.x));\n  }\n\n  getHeight(pos) {\n    return this.data.readUInt8((pos.z << 4) + (pos.x));\n  }\n\n  setHeight(pos, height) {\n    this.data.writeUInt8(height, (pos.z << 4) + (pos.x));\n  }\n\n  load(newData) {\n    if (!Buffer.isBuffer(newData))\n      throw(new Error('Data must be a buffer'));\n    \n    var offset = 0;\n    var numberOfChunks = newData.readUInt8(offset);\n    offset += 1;\n\n    if (((numberOfChunks * 10241) + 1) > newData.length) {\n      throw(new Error(`Data buffer not correct size \\(was ${newData.length}, expected ${3 + 256 + 512 + (16 * 10241)}\\)`));\n    }\n    \n    for(var i = 0; i < numberOfChunks; i++) {\n      this.chunks[i].load(newData.slice(offset, offset + 10241));\n      offset += 10241\n    }\n\n    // ignore the rest\n  }\n\n  size() {\n    var size = 1; // count of subchunks (byte)\n    size += this.chunks.length * 10241; // all of the chunks and their size\n    size += HEIGHT_SIZE;\n    size += BIOME_ID_SIZE; \n    size += 1; // border block count (byte)\n    size += 1; // signed varint block extradata count\n    return size;\n  }\n\n  dump() {\n    var offset = 0;\n\n    var exportData = new Buffer(this.size());\n    exportData.fill(0);\n\n    exportData.writeUInt8(this.chunks.length, offset);\n    offset += 1;\n\n    for (var i = 0; i < this.chunks.length; i++) {\n      var dump = this.chunks[i].dump();\n      dump.copy(exportData, offset);\n      offset += dump.length;\n    }\n\n    this.data.copy(exportData, offset);\n    offset += this.data.length;\n\n    exportData.writeUInt8(0, offset) // border block count\n    offset += 1;\n\n    exportData.writeUInt8(0, offset) // signed varint ?! (extdata count)\n    offset += 1;\n\n    return exportData;\n  }\n}\n"]}